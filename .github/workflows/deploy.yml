name: Build and Deployment pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'

      - name: Install Dependencies
        run: npm install

      - name: Build Node Project
        run: npm run build
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest

  deploy:
    name: Deploy to Google VM
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Deploy via SSH to Google VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.GCE_VM_IP }}
          username: ${{ secrets.GCE_VM_USER }}
          key: ${{ secrets.GCE_VM_SSH_KEY }}
          script: |
            echo "Logging into Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            echo "Pulling the latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest
            echo "Stopping and removing old container if it exists..."
            docker stop github-action-test || true
            docker rm github-action-test || true
            echo "Running new container..."
            docker run -d --name github-action-test -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest
